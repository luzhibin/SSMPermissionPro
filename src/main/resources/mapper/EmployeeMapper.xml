<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzb.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.lzb.pojo.Employee" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="inputtime" property="inputtime" jdbcType="TIMESTAMP" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="admin" property="admin" jdbcType="BIT" />
    <association property="department" javaType="com.lzb.pojo.Department" columnPrefix="d_">
      <result property="id" column="id"/>
      <result property="name" column="name"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <!--添加员工-->
  <insert id="insert" parameterType="com.lzb.pojo.Employee" useGeneratedKeys="true" keyProperty="id">
    insert into employee (id, username, password, inputtime,
      tel, email, state, admin, 
      dep_id)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},#{inputtime,jdbcType=TIMESTAMP},
      #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{state,jdbcType=BIT}, #{admin,jdbcType=BIT}, 
      #{department.id,jdbcType=BIGINT})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.lzb.pojo.Employee" >
    update employee
    set username = #{username,jdbcType=VARCHAR},
      inputtime = #{inputtime,jdbcType=TIMESTAMP},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      admin = #{admin,jdbcType=BIT},
      dep_id = #{department.id,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, username, inputtime, tel, email, state, admin, dep_id
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!--sql片段-->
  <sql id="where_sql">
    <where>
      <if test="keyword != null and keyword !=''">
        and e.username like concat('%',#{keyword},'%')
        or e.tel like concat('%',#{keyword},'%')
        or e.email like concat('%',#{keyword},'%')
        or e.state like concat('%',#{keyword},'%')
        or e.admin like concat('%',#{keyword},'%')
      </if>
    </where>
  </sql>

  <select id="selectAll" resultMap="BaseResultMap" >
    select
    e.id,e.username,e.inputtime,e.tel,e.email,e.state,e.admin,e.dep_id,
    d.id as d_id,
    d.name as d_name
    from employee as e
    left join department as d
    on e.dep_id = d.id
    <include refid="where_sql"/>
    order by e.id           /*根据e.id排序*/
  </select>

  <update id="updateState">
      update employee
      set state=false
      where id=#{id}
   </update>

  <!--保存员工和角色的关系-->
  <insert id="insertEmployeeAndRoleRel">
    insert into employee_role_rel(eid, rid)
    values (#{id},#{rid})
  </insert>

  <!--打破员工与角色的关系-->
  <delete id="deleteRoleRel">
    delete from employee_role_rel
    where eid=#{id}
  </delete>

  <select id="getEmployeeByUsername" resultType="com.lzb.pojo.Employee">
    select * from employee
    where username=#{username}
  </select>
</mapper>